---
- name: Create Control Center Data Directory
  file:
    path: "{{control_center.dataDir}}"
    owner: "{{kafka_user}}"
    group: "{{kafka_group}}"
    state: directory
    mode: 0750

- name: Change ownership of the data directory
  file:
    path: "{{control_center.dataDir}}"
    owner: "{{kafka_user}}"
    group: "{{kafka_group}}"
    recurse: true

- name: Create Control Center Configuration File
  template:
      dest: "{{control_center.config_file}}" # required. Location to render the template to on the remote machine.
      src: control-center-production.properties.j2 # required. Path of a Jinja2 formatted template on the Ansible controller. This can be a relative or absolute path.
      owner: "{{kafka_user}}" # not required. Name of the user that should own the file/directory, as would be fed to I(chown).
      group: "{{kafka_group}}" # not required. Name of the group that should own the file/directory, as would be fed to I(chown).
      mode: 0400 # not required. Mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers.  You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.  Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.  As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).  As of version 2.6, the mode may also be the special string C(preserve).  C(preserve) means that the file will be given the same permissions as the source file.

- name: Create Systemd Configuration File
  template:
      dest: "{{control_center.systemd_file}}" # required. Location to render the template to on the remote machine.
      src: systemd.j2 # required. Path of a Jinja2 formatted template on the Ansible controller. This can be a relative or absolute path.
      owner: root # not required. Name of the user that should own the file/directory, as would be fed to I(chown).
      group: root # not required. Name of the group that should own the file/directory, as would be fed to I(chown).
      mode: 0644 # not required. Mode the file or directory should be. For those used to I(/usr/bin/chmod) remember that modes are actually octal numbers.  You must either add a leading zero so that Ansible's YAML parser knows it is an octal number (like C(0644) or C(01777)) or quote it (like C('644') or C('1777')) so Ansible receives a string and can do its own conversion from string into number.  Giving Ansible a number without following one of these rules will end up with a decimal number which will have unexpected results.  As of version 1.8, the mode may be specified as a symbolic mode (for example, C(u+rwx) or C(u=rw,g=r,o=r)).  As of version 2.6, the mode may also be the special string C(preserve).  C(preserve) means that the file will be given the same permissions as the source file.
    
- name: Start Control Center Service
  systemd:
      name: "{{control_center_service_name}}" # not required. Name of the service. When using in a chroot environment you always need to specify the full name i.e. (crond.service).
      enabled: true # not required. Whether the service should start on boot. B(At least one of state and enabled are required.)
      daemon_reload: yes # not required. run daemon-reload before doing any other operations, to make sure systemd has read any changes.
      state: restarted # not required. choices: reloaded;restarted;started;stopped. C(started)/C(stopped) are idempotent actions that will not run commands unless necessary. C(restarted) will always bounce the service. C(reloaded) will always reload.